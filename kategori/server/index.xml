<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Server on Zyra</title>
    <link>https://mfachrulrazy.github.io/kategori/server/</link>
    <description>Recent content in Server on Zyra</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</managingEditor>
    <webMaster>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</webMaster>
    <lastBuildDate>Sat, 17 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mfachrulrazy.github.io/kategori/server/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Install WINS Windows Server 2003</title>
      <link>https://mfachrulrazy.github.io/post/install-wins-2003/</link>
      <pubDate>Sat, 17 Nov 2018 00:00:00 +0000</pubDate>
      <author>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</author>
      <guid>https://mfachrulrazy.github.io/post/install-wins-2003/</guid>
      <description>Dikutip dari Wikipedia
 WINS adalah singkatan dari Windows Internet Name Services sebuah layanan dalam sistem operasi Windows NT, Windows 2000 atau Windows Server 2003 yang secara dinamis melakukan registrasi terhadap nama NetBIOS yang dimiliki oleh komputer-komputer yang berada di dalam jaringan. WINS juga memungkinkan untuk melakukan sentralisasi terhadap proses resolusi nama NetBIOS ke dalam alamat IP. Dalam Windows NT, manajemen WINS lebih mudah dilakukan daripada DNS, karena bersifat dinamis. Tapi dalam Windows 2000 ke atas WINS telah ditinggalkan dan versi Windows tersebut menggunakan DNS sebagai metode resolusi nama host ke alamat IP, meski WINS juga tersedia sebagai perangkat opsional untuk mendukung sistem operasi yang lama (Windows 95, Windows 98, Windows NT, atau Windows for Workgroups).</description>
    </item>
    
    <item>
      <title>Install Varnish pada Centos 7</title>
      <link>https://mfachrulrazy.github.io/post/install-varnish-cent/</link>
      <pubDate>Fri, 26 Oct 2018 00:00:00 +0000</pubDate>
      <author>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</author>
      <guid>https://mfachrulrazy.github.io/post/install-varnish-cent/</guid>
      <description>Varnish adalah salah satu aplikasi cache web server atau aplikasi akselerator website yang biasa dikenal dengan a caching HTTP reverse proxy. Sebelumnya kita telah menginstall nginx sebagai web server yang akan berjalan di belakang varnish. Berikut langkah instalasi dan konfigurasi varnish.
Install Varnish 6 Install varnish terbaru versi 6 dengan cara compile dari source code.
1. Download source varnish dari situs resmi varnish # wget https://varnish-cache.org/_downloads/varnish-6.0.2.tgz 2. Install paket pendukung (build dependencies) # yum install make autoconf automake jemalloc-devel libedit-devel libtool ncurses-devel pcre-devel pkgconfig python-docutils python-sphinx 3.</description>
    </item>
    
    <item>
      <title>Install Vsftp Ubuntu 16.04</title>
      <link>https://mfachrulrazy.github.io/post/install-ftp-ubuntu/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      <author>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</author>
      <guid>https://mfachrulrazy.github.io/post/install-ftp-ubuntu/</guid>
      <description>Install ftp server menggunakan paket vsftpd $ sudo apt-get update $ sudo apt-get install vsftpd Backup file konfigurasi terlebih dahulu $ sudo cp /etc/vsftpd.conf /etc/vsftpd.conf.orig Cek firewall jika aktif bisa di disable atau allow port dari ftp $ sudo ufw status $ sudo ufw allow 20/tcp $ sudo ufw allow 21/tcp $ sudo ufw allow 990/tcp $ sudo ufw allow 40000:50000/tcp $ sudo ufw status Tambahkan user ftp $ sudo adduser ftpuser Buat direktori yang akan berfungsi sebagai chroot dan sebuah direktori yang dapat ditulis dan dihapus $ sudo mkdir /home/ftpuser/ftp $ sudo chown nobody:nogroup /home/ftpuser/ftp $ sudo chmod a-w /home/ ftpuser /ftp Buat direktori yang dapat ditulis (writeable) dan buatkan ownership pada ftpuser $ sudo mkdir /home/ftpuser/ftp/files $ sudo chown ftpuser:ftpuser /home/ftpuser/ftp/files Kemudian edit file /etc/vsftpd.</description>
    </item>
    
    <item>
      <title>Install Docker Windows 10 Home</title>
      <link>https://mfachrulrazy.github.io/post/install-docker-win10h/</link>
      <pubDate>Mon, 04 Dec 2017 00:00:00 +0000</pubDate>
      <author>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</author>
      <guid>https://mfachrulrazy.github.io/post/install-docker-win10h/</guid>
      <description> Menginstall Docker for Windows Community Edition (CE) sistem operasi yang dibutuhkan adalah Windows 10 Professional atau Enterprise 64-bit. Jika diinstall pada versi Windows 10 Home ada pengaturan khususnya.
Download Docker-Toolbox dan di dalamnya terdapat beberapa paket tambahan seperti:
 VirtualBox Git Kitematic
  Yang semuanya diperlukan untuk menjalankan docker.
Troubleshoot 1  Terdapat error baru pada saat setelah install docker-toolbox  Jika masih terdapat error restart PC Kemudian jalankan: Docker Quickstart Terminal Jalankan Kitematic untuk melihat daftar container Contoh di bawah ini pada saat menjalankan container Nginx   </description>
    </item>
    
    <item>
      <title>Uninstall Paket Linux</title>
      <link>https://mfachrulrazy.github.io/post/uninst-paket-centos7/</link>
      <pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate>
      <author>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</author>
      <guid>https://mfachrulrazy.github.io/post/uninst-paket-centos7/</guid>
      <description>Untuk menghapus seluruh paket bisa menggunakan perintah yum remove pada centos atau apt-get remove pada ubuntu. Berikut contoh untuk menghapus paket secara keseluruhan (completely remove package)
Menghapus paket Apache/Httpd  Lihat paket yang terinstall # yum list installed *httpd*  Lihat paket mod_ yang terinstall dan lihat paket php # yum list installed *mod_* # yum list installed php* Jika paket tidak didapat  Jika ada paket yang terinstall  Tanda bintang di awal dan di akhir dapat disesuaikan.</description>
    </item>
    
    <item>
      <title>Install Nodejs Centos 7</title>
      <link>https://mfachrulrazy.github.io/post/install-nodejs-cent/</link>
      <pubDate>Sat, 30 Sep 2017 00:00:00 +0000</pubDate>
      <author>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</author>
      <guid>https://mfachrulrazy.github.io/post/install-nodejs-cent/</guid>
      <description>Nodejs adalah salah satu framework javascript yang berjalan pada sisi server (server side). Kali ini nodejs akan diinstall pada Centos 7.
1. Download node js melalui situs resminya # wget http://nodejs.org/dist/v0.10.30/node-v0.10.30.tar.gz 2. Ekstrak file yang telah didownload dan masuk ke direktori hasil ekstrak # tar xzvf node-v* &amp;amp;&amp;amp; cd node-v* 3. Install gcc dan c++ untuk melakukan compile # yum install gcc gcc-c++ 4. Konfigurasi dan lakukan compile # ./configure # make # make install 5.</description>
    </item>
    
    <item>
      <title>Troubleshoot Script Email PHP</title>
      <link>https://mfachrulrazy.github.io/post/tb-php-email/</link>
      <pubDate>Fri, 15 Sep 2017 00:00:00 +0000</pubDate>
      <author>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</author>
      <guid>https://mfachrulrazy.github.io/post/tb-php-email/</guid>
      <description>Waktu itu ada di salah aplikasi di kantor ada yang ingin mengirim email. Setelah diidentifikasi ternyata ada pesan error pada log yang tidak mengizinkan script php mengirim email smtp dengan port 465.
Pesan error seperti ini ERROR: Failed to connect to server: Permission denied (13), hal ini dikarenakan SELinux sedang berjalan dan menghalangi php atau web server mengirim email.
Getsebool dapat mengecek apakah http daemon diizinkan untuk membuat koneksi ke jaringan dan mengirim email.</description>
    </item>
    
    <item>
      <title>Troubleshoot Web Server I</title>
      <link>https://mfachrulrazy.github.io/post/tb-web-server1/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
      <author>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</author>
      <guid>https://mfachrulrazy.github.io/post/tb-web-server1/</guid>
      <description>Waktu itu salah satu website di kantor bermasalah. Webnya tidak bisa diakses, tetapi servis database dan web server-nya berjalan dengan normal. Cek di firewall dalam hal ini menggunakan iptables karena os Centos 5.11 (end-of-life).
Izinkan traffic mysql dan http dengan menambahkan rule di iptables pada file /etc/sysconfig/iptables -A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j / ACCEPT -A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j / ACCEPT Kemudian restart iptables-nya # /etc/init.</description>
    </item>
    
    <item>
      <title>Menambahkan ukuran File Upload</title>
      <link>https://mfachrulrazy.github.io/post/max-file-up/</link>
      <pubDate>Sat, 12 Aug 2017 00:00:00 +0000</pubDate>
      <author>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</author>
      <guid>https://mfachrulrazy.github.io/post/max-file-up/</guid>
      <description>Menambahkan ukuran maximum file yang dapat diupload pada aplikasi yang menggunakan lemp stack (linux, nginx, mysql, php).
1. Edit file /etc/php.ini 1... 2upload_max_filesize = 100M 3... 2. Ubah pada file nginx.conf dan ubah pada bagian blok server dan http 1server { 2	client_max_body_size 100M; 3} 4 5... 6 7http { 8	client_max_body_size 100M; 9}</description>
    </item>
    
    <item>
      <title>Attach dam Import Database SQL Server</title>
      <link>https://mfachrulrazy.github.io/post/attach-imp-sqlsrv/</link>
      <pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate>
      <author>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</author>
      <guid>https://mfachrulrazy.github.io/post/attach-imp-sqlsrv/</guid>
      <description>Pada postingan kali ini akan saya bahas mengenai attach/detach database sql server menggunakan sql server management studio (SSMS 2017).
Jadi biasanya kita menggunakan attach dan detach database untuk memindahkan atau me-rename database. Tetapi merujuk dari situs dokumentasi microsoft sebaiknya tidak menggunakan cara ini tetapi dengan cara ALTER DATABASE. Biasanya kalau menggunakan cara ini kita harus memutus seluruh koneksi ke database dan transaction log backups, dan ada kemungkinan bisa menghapus file secara tidak sengaja.</description>
    </item>
    
    <item>
      <title>Install Php 5.4 Centos 7</title>
      <link>https://mfachrulrazy.github.io/post/install-php5-cent/</link>
      <pubDate>Fri, 26 May 2017 00:00:00 +0000</pubDate>
      <author>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</author>
      <guid>https://mfachrulrazy.github.io/post/install-php5-cent/</guid>
      <description> Download paket repositori epel secara manual menggunakan wget # wget http://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-11.noarch.rpm # wget http://rpms.famillecollet.com/enterprise/remi-release-7.rpm Install menggunakan rpm # rpm -Uvh remi-release-7*.rpm epel-release-7*.rpm Install yum-utils untuk mengatur repositori # yum install yum-utils Kemudian enable php 5.4 dan install paket php # #yum-config-manager --enable remi-php54 # yum install php php-mcrypt php-cli php-gd php-curl php-mysql php-ldap php-zip php-fileinfo Setelah itu cek versi php-nya # php -v  </description>
    </item>
    
    <item>
      <title>Install Nginx Centos 7</title>
      <link>https://mfachrulrazy.github.io/post/install-nginx-cent/</link>
      <pubDate>Sun, 23 Apr 2017 00:00:00 +0000</pubDate>
      <author>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</author>
      <guid>https://mfachrulrazy.github.io/post/install-nginx-cent/</guid>
      <description>Nginx adalah salah satu software yang memiliki banyak fungsi selain web server, bisa juga sebagai proxy dan load balancer. Postingan ini akan membahas konfigurasi nginx sebagai web server pada centos 7.
 Install repository EPEL # yum install epel-release Kemudian install nginx # yum install nginx Sebelum menjalankan servis nginx, ada baiknya untuk mengizinkan port yang nantinya akan digunakan oleh nginx # firewall-cmd --zone=public --permanent --add-port=80/tcp # firewall-cmd --reload Jalankan service nginx dan cek statusnya # systemctl start nginx # systemctl status nginx  Troubleshoot Nginx  Biasanya jika kita menjalankan servis nginx sebelum membuka firewall maka ada error seperti gambar di bawah ini.</description>
    </item>
    
    <item>
      <title>Openssh Centos 7</title>
      <link>https://mfachrulrazy.github.io/post/openssh-cent-7/</link>
      <pubDate>Sun, 21 Aug 2016 00:00:00 +0000</pubDate>
      <author>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</author>
      <guid>https://mfachrulrazy.github.io/post/openssh-cent-7/</guid>
      <description>Install Openssh Server  Install paket openssh server dan client # yum -y install openssh-server openssh-clients Jalankan service-nya # chkconfig sshd on # service sshd start Pastikan service-nya telah berjalan (install netstat terlebih dahulu) # netstat -tulpn | grep :22 Edit file konfigurasinya jika ingin mengganti port(pastikan untuk backup file konfigurasi terlebih dahulu) # vi /etc/ssh/sshd_config Jika ada perubahan pada file konfigurasi, restart servis ssh # systemctl restart sshd.service Atau # service sshd restart</description>
    </item>
    
    <item>
      <title>Berkenalan dengan Cron</title>
      <link>https://mfachrulrazy.github.io/post/about-cron/</link>
      <pubDate>Fri, 05 Feb 2016 00:00:00 +0000</pubDate>
      <author>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</author>
      <guid>https://mfachrulrazy.github.io/post/about-cron/</guid>
      <description>Apa itu cron? Jadi, cron adalah sebuah software utilitas di lingkungan linux/unix yang berfungsi sebagai pembuat jadwal pekerjaan berdasarkan waktu yang bisa ditentukan.
Untuk membuat cron baru # crontab -e Melihat daftar cron # crontab -l Setiap perintah yang dijalankan di cron, akan mengirim ke email secara default dan biasanya dalam terminal akan muncul You have new mail in /var/spool/mail/root Isi dari file /var/spool/mail/root adalah proses dari script yang dijalankan.</description>
    </item>
    
    <item>
      <title>Belajar Mysql Part 1</title>
      <link>https://mfachrulrazy.github.io/post/konfig-mysql1/</link>
      <pubDate>Sat, 07 Mar 2015 00:00:00 +0000</pubDate>
      <author>mfachrulrazy@gmail.com (Muhammad Fachrul Razy)</author>
      <guid>https://mfachrulrazy.github.io/post/konfig-mysql1/</guid>
      <description>Login ke mysql dari terminal # mysql -u root -p Memilih database &amp;gt; USE MYSQL; Membuat user baru &amp;gt; CREATE USER &amp;#39;userbaru&amp;#39;@&amp;#39;localhost&amp;#39; IDENTIFIED BY &amp;#39;password&amp;#39;; Lihat nama user yang ingin diubah aksesnya &amp;gt; SELECT USER,HOST FROM USER; Update datanya menjadi yang diinginkan &amp;gt; UPDATE USER SET HOST = &amp;#39;%&amp;#39; WHERE USER=&amp;#39;user&amp;#39;; Mengaktifkan perubahan &amp;gt; FLUSH PRIVILEGES; Cek database sekarang atau user sekarang (yang sedang aktif) &amp;gt; SELECT [ database() ]; [ user() ] Mengubah password user mysql &amp;gt; SET PASSWORD FOR &amp;#39;user&amp;#39;@&amp;#39;localhost&amp;#39; = PASSWORD(&amp;#39;password&amp;#39;);  Tanda % memastikan bahwa user dapat mengakses database via remote (any ip address).</description>
    </item>
    
  </channel>
</rss>